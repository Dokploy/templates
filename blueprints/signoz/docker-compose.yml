version: "3.8"

x-common: &common
  networks:
    - signoz-net
  restart: unless-stopped
  logging:
    options:
      max-size: 50m
      max-file: "3"

x-clickhouse-defaults: &clickhouse-defaults
  <<: *common
  image: clickhouse/clickhouse-server:24.1.2-alpine
  tty: true
  labels:
    signoz.io/scrape: "true"
    signoz.io/port: "9363"
    signoz.io/path: "/metrics"
  depends_on:
    init-clickhouse:
      condition: service_completed_successfully
    zookeeper-1:
      condition: service_healthy
  healthcheck:
    test:
      - CMD
      - wget
      - --spider
      - -q
      - 0.0.0.0:8123/ping
    interval: 30s
    timeout: 5s
    retries: 3
  ulimits:
    nproc: 65535
    nofile:
      soft: 262144
      hard: 262144

x-zookeeper-defaults: &zookeeper-defaults
  <<: *common
  image: bitnami/zookeeper:3.7.1
  user: root
  labels:
    signoz.io/scrape: "true"
    signoz.io/port: "9141"
    signoz.io/path: "/metrics"
  healthcheck:
    test:
      - CMD-SHELL
      - curl -s -m 2 http://localhost:8080/commands/ruok | grep error | grep null
    interval: 30s
    timeout: 5s

x-db-depend: &db-depend
  <<: *common
  depends_on:
    clickhouse:
      condition: service_healthy
    schema-migrator-sync:
      condition: service_completed_successfully

networks:
  signoz-net:


volumes:
  clickhouse:
  zookeeper-1:
  sqlite:


services:
  init-clickhouse:
    <<: *common
    image: clickhouse/clickhouse-server:24.1.2-alpine
    container_name: signoz-init-clickhouse
    command:
      - /bin/bash
      - -c
      - |
        set -e
        version="v0.0.1"
        node_os=$$(uname -s | tr \'[:upper:]\' \'[:lower:]\')
        node_arch=$$(uname -m | sed s/aarch64/arm64/ | sed s/x86_64/amd64/)
        echo "Fetching histogram-binary for $${node_os}/$${node_arch}"
        cd /tmp
        wget -O histogram-quantile.tar.gz "https://github.com/SigNoz/signoz/releases/download/histogram-quantile%2F$${version}/histogram-quantile_$${node_os}_$${node_arch}.tar.gz" && \
        tar -xvzf histogram-quantile.tar.gz && \
        mv histogram-quantile /var/lib/clickhouse/user_scripts/histogramQuantile
        echo "Histogram UDF setup complete."
    restart: on-failure
    volumes:
      - ./common/clickhouse/user_scripts:/var/lib/clickhouse/user_scripts/

  zookeeper-1:
    <<: *zookeeper-defaults
    container_name: signoz-zookeeper-1
    volumes:
      - zookeeper-1:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
      - ZOO_ENABLE_PROMETHEUS_METRICS=yes
      - ZOO_PROMETHEUS_METRICS_PORT_NUMBER=9141

  clickhouse:
    <<: *clickhouse-defaults
    container_name: signoz-clickhouse
    volumes:
      - ./common/clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./common/clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - ./common/clickhouse/custom-function.xml:/etc/clickhouse-server/custom-function.xml
      - ./common/clickhouse/cluster.xml:/etc/clickhouse-server/config.d/cluster.xml
      - ./common/clickhouse/user_scripts:/var/lib/clickhouse/user_scripts/
      - clickhouse:/var/lib/clickhouse/

  signoz:
    <<: *db-depend
    image: signoz/signoz:${VERSION:-v0.82.1}
    container_name: signoz
    command:
      - --config=/root/config/prometheus.yml
      - --use-logs-new-schema=true
      - --use-trace-new-schema=true
    ports:
      - "8080:8080"
    volumes:
      - ./common/signoz/prometheus.yml:/root/config/prometheus.yml
      - ./dashboards:/root/config/dashboards
      - sqlite:/var/lib/signoz/
    environment:
      - SIGNOZ_ALERTMANAGER_PROVIDER=signoz
      - SIGNOZ_TELEMETRYSTORE_CLICKHOUSE_DSN=tcp://clickhouse:9000
      - SIGNOZ_SQLSTORE_SQLITE_PATH=/var/lib/signoz/signoz.db
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider http://localhost:8080/api/v1/health" ]
      interval: 30s
      timeout: 5s
      retries: 3

  otel-collector:
    <<: *db-depend
    image: signoz/signoz-otel-collector:${OTELCOL_TAG:-v0.111.41}
    container_name: signoz-otel-collector
    command:
      - --config=/etc/otel-collector-config.yaml
      - --manager-config=/etc/manager-config.yaml
      - --feature-gates=-pkg.translator.prometheus.NormalizeName
    volumes:
      - ./common/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./common/signoz/otel-collector-opamp-config.yaml:/etc/manager-config.yaml
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=signoz-host,os.type=linux
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
    ports:
      - "4317:4317"
      - "4318:4318"

  schema-migrator-sync:
    <<: *common
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-v0.111.41}
    container_name: schema-migrator-sync
    command: [ "sync", "--dsn=tcp://clickhouse:9000", "--up=" ]
    depends_on:
      clickhouse:
        condition: service_healthy
    restart: on-failure

  schema-migrator-async:
    <<: *db-depend
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-v0.111.41}
    container_name: schema-migrator-async
    command: [ "async", "--dsn=tcp://clickhouse:9000", "--up=" ]
    restart: on-failure
