version: '3.8'

services:
  minio:
    image: minio/minio:latest
    restart: on-failure
    command: server /data --console-address ":9001"
    environment:
      - APPFLOWY_BASE_URL=${APPFLOWY_BASE_URL}
      - APPFLOWY_S3_ACCESS_KEY=${APPFLOWY_S3_ACCESS_KEY}
      - APPFLOWY_S3_SECRET_KEY=${APPFLOWY_S3_SECRET_KEY}
    volumes:
      - minio_data:/data

  postgres:
    image: pgvector/pgvector:pg17
    restart: on-failure
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 12
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: on-failure

  gotrue:
    image: appflowyinc/gotrue:${GOTRUE_VERSION:-latest}
    restart: on-failure
    build:
      context: docker/gotrue
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://127.0.0.1:9999/health"]
      interval: 5s
      timeout: 5s
      retries: 12
    environment:
      - GOTRUE_ADMIN_EMAIL=${GOTRUE_ADMIN_EMAIL}
      - GOTRUE_ADMIN_PASSWORD=${GOTRUE_ADMIN_PASSWORD}
      - GOTRUE_JWT_SECRET=${GOTRUE_JWT_SECRET}
      - GOTRUE_JWT_EXP=${GOTRUE_JWT_EXP}
      - GOTRUE_DB_DRIVER=${GOTRUE_DB_DRIVER}
      - GOTRUE_SITE_URL=${GOTRUE_SITE_URL}
      - API_EXTERNAL_URL=${API_EXTERNAL_URL}
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - GOTRUE_URI_ALLOW_LIST=${GOTRUE_URI_ALLOW_LIST}
      - GOTRUE_JWT_ADMIN_GROUP_NAME=${GOTRUE_JWT_ADMIN_GROUP_NAME}
      - GOTRUE_SMTP_HOST=${GOTRUE_SMTP_HOST}
      - GOTRUE_SMTP_PORT=${GOTRUE_SMTP_PORT}
      - GOTRUE_SMTP_USER=${GOTRUE_SMTP_USER}
      - GOTRUE_SMTP_PASS=${GOTRUE_SMTP_PASS}
      - GOTRUE_SMTP_ADMIN_EMAIL=${GOTRUE_SMTP_ADMIN_EMAIL}
      - GOTRUE_SMTP_MAX_FREQUENCY=${GOTRUE_SMTP_MAX_FREQUENCY}
      - GOTRUE_RATE_LIMIT_EMAIL_SENT=${GOTRUE_RATE_LIMIT_EMAIL_SENT}
      - GOTRUE_MAILER_AUTOCONFIRM=${GOTRUE_MAILER_AUTOCONFIRM}
      - GOTRUE_EXTERNAL_GOOGLE_ENABLED=${GOTRUE_EXTERNAL_GOOGLE_ENABLED}
      - GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID=${GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID}
      - GOTRUE_EXTERNAL_GOOGLE_SECRET=${GOTRUE_EXTERNAL_GOOGLE_SECRET}
      - GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI=${GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI}
      - GOTRUE_EXTERNAL_GITHUB_ENABLED=${GOTRUE_EXTERNAL_GITHUB_ENABLED}
      - GOTRUE_EXTERNAL_GITHUB_CLIENT_ID=${GOTRUE_EXTERNAL_GITHUB_CLIENT_ID}
      - GOTRUE_EXTERNAL_GITHUB_SECRET=${GOTRUE_EXTERNAL_GITHUB_SECRET}
      - GOTRUE_EXTERNAL_GITHUB_REDIRECT_URI=${GOTRUE_EXTERNAL_GITHUB_REDIRECT_URI}
      - GOTRUE_EXTERNAL_DISCORD_ENABLED=${GOTRUE_EXTERNAL_DISCORD_ENABLED}
      - GOTRUE_EXTERNAL_DISCORD_CLIENT_ID=${GOTRUE_EXTERNAL_DISCORD_CLIENT_ID}
      - GOTRUE_EXTERNAL_DISCORD_SECRET=${GOTRUE_EXTERNAL_DISCORD_SECRET}
      - GOTRUE_EXTERNAL_DISCORD_REDIRECT_URI=${GOTRUE_EXTERNAL_DISCORD_REDIRECT_URI}
      - GOTRUE_SAML_ENABLED=${GOTRUE_SAML_ENABLED}
      - GOTRUE_SAML_PRIVATE_KEY=${GOTRUE_SAML_PRIVATE_KEY}
      - GOTRUE_MAILER_URLPATHS_CONFIRMATION=${GOTRUE_MAILER_URLPATHS_CONFIRMATION}
      - GOTRUE_MAILER_URLPATHS_INVITE=${GOTRUE_MAILER_URLPATHS_INVITE}
      - GOTRUE_MAILER_URLPATHS_RECOVERY=${GOTRUE_MAILER_URLPATHS_RECOVERY}
      - GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE=${GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE}
      - GOTRUE_MAILER_TEMPLATES_MAGIC_LINK=${GOTRUE_MAILER_TEMPLATES_MAGIC_LINK}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gotrue.rule=Host(`${DOMAIN}`) && PathPrefix(`/gotrue`)"
      - "traefik.http.middlewares.gotrue-strip.stripprefix.prefixes=/gotrue"
      - "traefik.http.routers.gotrue.middlewares=gotrue-strip"
      - "traefik.http.routers.gotrue.entrypoints=websecure"
      - "traefik.http.routers.gotrue.tls=true"
      - "traefik.http.routers.gotrue.tls.certresolver=letsencrypt"
      - "traefik.http.services.gotrue.loadbalancer.server.port=9999"

  appflowy_cloud:
    image: appflowyinc/appflowy_cloud:${APPFLOWY_CLOUD_VERSION:-latest}
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
      args:
        FEATURES: ""
    depends_on:
      gotrue:
        condition: service_healthy
    environment:
      - RUST_LOG=${RUST_LOG}
      - APPFLOWY_ENVIRONMENT=${APPFLOWY_ENVIRONMENT}
      - APPFLOWY_DATABASE_URL=${APPFLOWY_DATABASE_URL}
      - APPFLOWY_REDIS_URI=${APPFLOWY_REDIS_URI}
      - APPFLOWY_GOTRUE_JWT_SECRET=${APPFLOWY_GOTRUE_JWT_SECRET}
      - APPFLOWY_GOTRUE_JWT_EXP=${APPFLOWY_GOTRUE_JWT_EXP}
      - APPFLOWY_GOTRUE_BASE_URL=${APPFLOWY_GOTRUE_BASE_URL}
      - APPFLOWY_S3_CREATE_BUCKET=${APPFLOWY_S3_CREATE_BUCKET}
      - APPFLOWY_S3_USE_MINIO=${APPFLOWY_S3_USE_MINIO}
      - APPFLOWY_S3_MINIO_URL=${APPFLOWY_S3_MINIO_URL}
      - APPFLOWY_S3_ACCESS_KEY=${APPFLOWY_S3_ACCESS_KEY}
      - APPFLOWY_S3_SECRET_KEY=${APPFLOWY_S3_SECRET_KEY}
      - APPFLOWY_S3_BUCKET=${APPFLOWY_S3_BUCKET}
      - APPFLOWY_S3_REGION=${APPFLOWY_S3_REGION}
      - APPFLOWY_S3_PRESIGNED_URL_ENDPOINT=${APPFLOWY_S3_PRESIGNED_URL_ENDPOINT}
      - APPFLOWY_MAILER_SMTP_HOST=${APPFLOWY_MAILER_SMTP_HOST}
      - APPFLOWY_MAILER_SMTP_PORT=${APPFLOWY_MAILER_SMTP_PORT}
      - APPFLOWY_MAILER_SMTP_USERNAME=${APPFLOWY_MAILER_SMTP_USERNAME}
      - APPFLOWY_MAILER_SMTP_EMAIL=${APPFLOWY_MAILER_SMTP_EMAIL}
      - APPFLOWY_MAILER_SMTP_PASSWORD=${APPFLOWY_MAILER_SMTP_PASSWORD}
      - APPFLOWY_MAILER_SMTP_TLS_KIND=${APPFLOWY_MAILER_SMTP_TLS_KIND}
      - APPFLOWY_ACCESS_CONTROL=${APPFLOWY_ACCESS_CONTROL}
      - APPFLOWY_DATABASE_MAX_CONNECTIONS=${APPFLOWY_DATABASE_MAX_CONNECTIONS}
      - AI_SERVER_HOST=${AI_SERVER_HOST}
      - AI_SERVER_PORT=${AI_SERVER_PORT}
      - AI_OPENAI_API_KEY=${AI_OPENAI_API_KEY}
      - APPFLOWY_WEB_URL=${APPFLOWY_WEB_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.appflowy_cloud.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.appflowy_cloud-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.appflowy_cloud.middlewares=appflowy_cloud-strip"
      - "traefik.http.routers.appflowy_cloud.entrypoints=websecure"
      - "traefik.http.routers.appflowy_cloud.tls=true"
      - "traefik.http.routers.appflowy_cloud.tls.certresolver=letsencrypt"
      - "traefik.http.services.appflowy_cloud.loadbalancer.server.port=8000"

  admin_frontend:
    image: appflowyinc/admin_frontend:${APPFLOWY_ADMIN_FRONTEND_VERSION:-latest}
    restart: on-failure
    build:
      context: .
      dockerfile: ./admin_frontend/Dockerfile
    depends_on:
      gotrue:
        condition: service_healthy
      appflowy_cloud:
        condition: service_started
    environment:
      - RUST_LOG=${RUST_LOG}
      - ADMIN_FRONTEND_REDIS_URL=${ADMIN_FRONTEND_REDIS_URL}
      - ADMIN_FRONTEND_GOTRUE_URL=${ADMIN_FRONTEND_GOTRUE_URL}
      - ADMIN_FRONTEND_APPFLOWY_CLOUD_URL=${ADMIN_FRONTEND_APPFLOWY_CLOUD_URL}
      - ADMIN_FRONTEND_PATH_PREFIX=${ADMIN_FRONTEND_PATH_PREFIX}
      - ADMIN_FRONTEND_TLS_SKIP_VERIFY=${ADMIN_FRONTEND_TLS_SKIP_VERIFY}
      - GOTRUE_URL=${GOTRUE_URL}
      - APPFLOWY_CLOUD_URL=${APPFLOWY_CLOUD_URL}
      - REDIS_URL=${REDIS_URL}
      - ADMIN_FRONTEND_HOST=${ADMIN_FRONTEND_HOST}
      - ADMIN_FRONTEND_PORT=${ADMIN_FRONTEND_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin_frontend.rule=Host(`${DOMAIN}`) && PathPrefix(`/console`)"
      - "traefik.http.middlewares.admin_frontend-strip.stripprefix.prefixes=/console"
      - "traefik.http.routers.admin_frontend.middlewares=admin_frontend-strip"
      - "traefik.http.routers.admin_frontend.entrypoints=websecure"
      - "traefik.http.routers.admin_frontend.tls=true"
      - "traefik.http.routers.admin_frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.admin_frontend.loadbalancer.server.port=3000"

  ai:
    image: appflowyinc/appflowy_ai:${APPFLOWY_AI_VERSION:-latest}
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - APPFLOWY_AI_SERVER_PORT=${APPFLOWY_AI_SERVER_PORT}
      - APPFLOWY_AI_DATABASE_URL=${APPFLOWY_AI_DATABASE_URL}
      - APPFLOWY_AI_REDIS_URL=${APPFLOWY_AI_REDIS_URL}

  appflowy_worker:
    image: appflowyinc/appflowy_worker:${APPFLOWY_WORKER_VERSION:-latest}
    restart: on-failure
    build:
      context: .
      dockerfile: ./services/appflowy-worker/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - RUST_LOG=${RUST_LOG}
      - APPFLOWY_ENVIRONMENT=${APPFLOWY_WORKER_ENVIRONMENT}
      - APPFLOWY_WORKER_REDIS_URL=${APPFLOWY_WORKER_REDIS_URL}
      - APPFLOWY_WORKER_DATABASE_URL=${APPFLOWY_WORKER_DATABASE_URL}
      - APPFLOWY_WORKER_DATABASE_NAME=${APPFLOWY_WORKER_DATABASE_NAME}
      - APPFLOWY_WORKER_IMPORT_TICK_INTERVAL=${APPFLOWY_WORKER_IMPORT_TICK_INTERVAL}
      - APPFLOWY_S3_USE_MINIO=${APPFLOWY_S3_USE_MINIO}
      - APPFLOWY_S3_MINIO_URL=${APPFLOWY_S3_MINIO_URL}
      - APPFLOWY_S3_ACCESS_KEY=${APPFLOWY_S3_ACCESS_KEY}
      - APPFLOWY_S3_SECRET_KEY=${APPFLOWY_S3_SECRET_KEY}
      - APPFLOWY_S3_BUCKET=${APPFLOWY_S3_BUCKET}
      - APPFLOWY_S3_REGION=${APPFLOWY_S3_REGION}
      - APPFLOWY_MAILER_SMTP_HOST=${APPFLOWY_MAILER_SMTP_HOST}
      - APPFLOWY_MAILER_SMTP_PORT=${APPFLOWY_MAILER_SMTP_PORT}
      - APPFLOWY_MAILER_SMTP_USERNAME=${APPFLOWY_MAILER_SMTP_USERNAME}
      - APPFLOWY_MAILER_SMTP_EMAIL=${APPFLOWY_MAILER_SMTP_EMAIL}
      - APPFLOWY_MAILER_SMTP_PASSWORD=${APPFLOWY_MAILER_SMTP_PASSWORD}
      - APPFLOWY_MAILER_SMTP_TLS_KIND=${APPFLOWY_MAILER_SMTP_TLS_KIND}

  appflowy_web:
    image: appflowyinc/appflowy_web:${APPFLOWY_WEB_VERSION:-latest}
    restart: on-failure
    depends_on:
      - appflowy_cloud
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.appflowy_web.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.appflowy_web.entrypoints=websecure"
      - "traefik.http.routers.appflowy_web.tls=true"
      - "traefik.http.routers.appflowy_web.tls.certresolver=letsencrypt"
      - "traefik.http.services.appflowy_web.loadbalancer.server.port=80"

volumes:
  postgres_data:
  minio_data:
  letsencrypt:

