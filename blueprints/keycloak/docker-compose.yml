services:
  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.0
    environment:
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}

      # Admin credentials
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      # Hostname configuration for reverse proxy
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      # Enable HTTP for reverse proxy (TLS terminated at proxy)
      KC_HTTP_ENABLED: true

      # Proxy configuration - REQUIRED for Dokploy/reverse proxy
      KC_PROXY_HEADERS: xforwarded

      # Log level
      KC_LOG_LEVEL: INFO

    volumes:
      - keycloak_data:/opt/keycloak/data
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8080
    command:
    
      - /bin/bash
      - -c
      - |
        echo "Setting up Keycloak with Apple Identity Provider..."

        # Create providers directory if it doesn't exist
        mkdir -p /opt/keycloak/providers

        # Download Apple Identity Provider if not already present
        if [ ! -f /opt/keycloak/providers/apple-identity-provider-1.15.0.jar ]; then
          echo "Downloading Apple Identity Provider..."
          curl -L -f -o /opt/keycloak/providers/apple-identity-provider-1.15.0.jar \
            https://github.com/klausbetz/apple-identity-provider-keycloak/releases/download/1.15.0/apple-identity-provider-1.15.0.jar
          chmod 644 /opt/keycloak/providers/*.jar
          echo "Apple Identity Provider downloaded successfully"
        else
          echo "Apple Identity Provider already exists"
        fi

        # Build Keycloak with the provider
        echo "Building Keycloak..."
        /opt/keycloak/bin/kc.sh build --db=postgres --health-enabled=true --metrics-enabled=true

        # Start Keycloak
        echo "Starting Keycloak..."
        exec /opt/keycloak/bin/kc.sh start --optimized --proxy-headers=xforwarded
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s

volumes:
  postgres_data:
  keycloak_data: