services:
  app:
    container_name: server
    restart: unless-stopped
    build:
      context: https://github.com/Yooooomi/your_spotify.git
      dockerfile: Dockerfile.server.production
      args:
        NODE_ENV: production
    depends_on:
      - mongo
    ports:
      - "8080"
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      API_ENDPOINT: ${API_ENDPOINT:-http://localhost:8080}
      CLIENT_ENDPOINT: ${CLIENT_ENDPOINT:-http://localhost:3000}
      SPOTIFY_PUBLIC: ${SPOTIFY_PUBLIC}
      SPOTIFY_SECRET: ${SPOTIFY_SECRET}
      TIMEZONE: ${TIMEZONE:-Europe/Paris}
      MONGO_ENDPOINT: ${MONGO_ENDPOINT:-mongodb://mongo:27017/your_spotify}
      CORS: ${CORS:-}
      COOKIE_VALIDITY_MS: ${COOKIE_VALIDITY_MS:-1h}
      MAX_IMPORT_CACHE_SIZE: ${MAX_IMPORT_CACHE_SIZE:-}
      MONGO_NO_ADMIN_RIGHTS: ${MONGO_NO_ADMIN_RIGHTS:-false}
      PORT: ${PORT:-8080}
      FRAME_ANCESTORS: ${FRAME_ANCESTORS:-}
      PROMETHEUS_USERNAME: ${PROMETHEUS_USERNAME:-}
      PROMETHEUS_PASSWORD: ${PROMETHEUS_PASSWORD:-}

  mongo:
    image: mongo:${MONGO_VERSION:-6}
    restart: unless-stopped
    volumes:
      - db_data:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: your_spotify

  web:
    container_name: web
    restart: unless-stopped
    build:
      context: https://github.com/Yooooomi/your_spotify.git
      dockerfile: Dockerfile.client.production
      args:
        NODE_ENV: production
    ports:
      - "3000"
    environment:
      NODE_ENV: production
      API_ENDPOINT: ${API_ENDPOINT:-http://localhost:8080}

volumes:
  db_data:
